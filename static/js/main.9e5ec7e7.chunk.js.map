{"version":3,"sources":["App.js","serviceWorker.js","index.js","Buttons.js"],"names":["App","react_default","a","createElement","Buttons","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","state","display","temp","result","handleClick","e","console","log","target","value","_this","setState","handleBack","shortenedString","substr","length","handleDelete","handleOperation","isInt","eval","toFixed","reset","n","Number","react__WEBPACK_IMPORTED_MODULE_5___default","className","this","type","name","onClick","Component"],"mappings":"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","file":"static/js/main.9e5ec7e7.chunk.js","sourcesContent":["import React from 'react';\n\nimport './App.css';\nimport Buttons from './Buttons.js';\nfunction App() {\n  return (\n    <Buttons/>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import React, { Component } from 'react';\nclass Buttons extends Component {\nstate = {\n    display: '',\n    temp : '',\n    result : 0\n}\nhandleClick = e => {\n  //  this.state.display = .\nconsole.log(e.target.value);\nthis.setState({\n    display : this.state.display + e.target.value\n})\n}\nhandleBack =() =>{\n    let shortenedString = this.state.display.substr(0,(this.state.display.length -1));\n    this.setState({\n        display: shortenedString\n    })\n}\nhandleDelete =() =>{\n    this.setState({\n        temp : this.state.display,\n        display: '',\n    })\n}\nhandleOperation=()=>{\n    console.log(\"asd\");\n    try {\n        if( this.isInt( eval( this.state.display )) )\n        {\n            if(( eval(this.state.display) || \"\" ) + \"\" =='')\n            {\n            this.setState({\n                display: 0\n            })\n            }\n            else{\n                this.setState({\n                    display: ( eval(this.state.display) || \"\" ) + \"\"\n                })\n            }\n        }\n        else{\n            if(( eval(this.state.display) || \"\" ) + \"\" ==''){\n            this.setState({\n                display: 0.00\n            })\n            }\n            else{\n                this.setState({\n                    display: ( eval(this.state.display).toFixed(2) || \"\" ) + \"\"\n                })\n            }\n        }\n        \n    } catch (e) {\n        this.setState({\n            display: \"error\"\n        })\n\n    }\n}\nreset = () =>{\n    if(this.state.temp!='')\n    this.setState({\n        display : this.state.temp\n    })\n}\nisInt= n =>{\n    return Number(n) === n && n % 1 === 0;\n}\n\n\n\n\nrender(){\n    return(\n    <div className=\"container\">\n\n     \n    <div className=\"calc-body\">\n    <div className=\"calc-screen\">\n        <div className=\"calc-operation\">{this.state.temp}</div>\n         <div className=\"calc-typed\">{this.state.display}<span className=\"blink-me\">_</span></div>\n    </div>\n    \n                <div className=\"calc-button-row\">\n                <input className=\"button\"  type=\"button\" name=\"bttn7\" value=\"7\" onClick={this.handleClick}/>\n                <input className=\"button\" type=\"button\" name=\"bttn8\" value=\"8\"  onClick={this.handleClick} />\n                <input className=\"button\" type=\"button\" name=\"bttn9\" value=\"9\" onClick={this.handleClick}/>\n                <input className=\"button l\" type=\"button\" name=\"bttnplus\" value=\"+\" onClick={this.handleClick}/>\n                </div>\n                <div className=\"calc-button-row\">\n                <input className=\"button\" type=\"button\" name=\"bttn4\" value=\"4\" onClick={this.handleClick}/>\n                <input className=\"button\" type=\"button\" name=\"bttn5\" value=\"5\" onClick={this.handleClick}/>\n                <input className=\"button\" type=\"button\" name=\"bttn6\" value=\"6\" onClick={this.handleClick}/>\n                <input className=\"button l\" type=\"button\" name=\"bttnminus\" value=\"-\" onClick={this.handleClick}/>\n                </div>\n                <div className=\"calc-button-row\">\n                <input className=\"button\" type=\"button\" name=\"bttn1\" value=\"1\" onClick={this.handleClick}/>\n                <input className=\"button\" type=\"button\" name=\"bttn2\" value=\"2\" onClick={this.handleClick}/>\n                <input className=\"button\" type=\"button\" name=\"bttn3\" value=\"3\" onClick={this.handleClick}/>\n                <input className=\"button l\" type=\"button\" name=\"bttnmulti\" value=\"*\" onClick={this.handleClick}/>\n                </div>\n                <div className=\"calc-button-row\">\n                <input className=\"button\" type=\"button\" name=\"bttndot\" value=\".\" onClick={this.handleClick}/>\n                <input className=\"button\" type=\"button\" name=\"bttn0\" value=\"0\" onClick={this.handleClick}/>\n                <input className=\"button l\" type=\"button\" name=\"bttnmod\" value=\"%\" onClick={this.handleClick}/>\n                <input className=\"button l\" type=\"button\" name=\"bttndiv\" value=\"/\" onClick={this.handleClick}/><br/>\n                </div>\n                <div className=\"calc-button-row\">\n                <input className=\"button\" type=\"button\" name=\"bttnclear\" onClick={this.reset} value=\"Re\" />\n                <input className=\"button c\" type=\"button\" name=\"bttnclear\" onClick={this.handleDelete} value=\"CE\" />\n                <input className=\"button l\" type=\"button\" name=\"bttnclear\" onClick={this.handleBack} value=\" < \" />\n\n                <input className=\"button l\" type=\"button\" name=\"bttnEQL\" value=\"=\"  onClick={this.handleOperation}/>\n                </div>\n     </div>\n\n    \n</div>\n    );\n}\n}\nexport default Buttons;"],"sourceRoot":""}